version: '3.4'

services:
  # frontend:
  #   build: ./frontend-react/
  #   container_name: frontend-cont
  #   restart: always
  #   ports:
  #     - '8082:3000'
  #   depends_on:
  #     - backend
  #   environment:
  #     - NODE_ENV=production
  #   networks:
  #     my-network:
  #       ipv4_address: 172.16.238.10

  # backend:
  #   build: ./backend-nest/
  #   container_name: backend-cont
  #   restart: always
  #   ports:
  #     - '3001:3000'
  #   depends_on:
  #     - database
  #   environment:
  #     - TEST_VARIABLE=variable-name
  #   networks:
  #     my-network:
  #       ipv4_address: 172.16.238.11

  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: mydb
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      my-network:
        ipv4_address: 172.16.238.12

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@test.com
      PGADMIN_DEFAULT_PASSWORD: pgadminpassword
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - '8081:80'
    depends_on:
      - database
    networks:
      - my-network

volumes:
  db-data:
  pgadmin-data:

networks:
  my-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
